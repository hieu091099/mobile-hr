{"version":3,"sources":["paperSelect.tsx"],"names":["PaperSelect","label","arrayList","selectedArrayList","multiEnable","errorText","value","onSelection","dialogStyle","dialogTitleStyle","searchStyle","checkboxColor","checkboxLabelStyle","checkboxUncheckedColor","errorStyle","textInputMode","underlineColor","activeUnderlineColor","activeOutlineColor","outlineColor","textInputBackgroundColor","textInputColor","textInputHeight","dialogButtonLabelStyle","selectText","setSelectText","searchKey","setSearchKey","arrayHolder","setArrayHolder","list","setList","selectedList","setSelectedList","selectInputRef","visible","setVisible","showDialog","_hideDialog","data","selectedData","selected","forEach","val","el","_id","push","join","text","current","blur","_onFocus","_onChecked","item","indexSelected","indexOf","splice","_onCheckedSingle","_exists","_isCheckedAll","length","_checkAll","slice","_renderListForMulti","map","key","flexDirection","alignItems","_renderListForSingle","_filterFunction","newData","filter","toLowerCase","includes","styles","container","backgroundColor","color","height","justifyContent","alignSelf","alignContent","position","top","bottom","left","right","borderRadius","paddingVertical","paddingHorizontal","iconColor","borderColor","borderWidth","marginBottom","marginHorizontal","textColor","width","marginTop","StyleSheet","create"],"mappings":"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","sourcesContent":["/* eslint-disable react-native/no-inline-styles */\nimport React, { memo, useRef, useState } from 'react';\nimport {\n  View,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  ScrollView,\n} from 'react-native';\nimport {\n  TextInput,\n  Button,\n  Dialog,\n  Portal,\n  Searchbar,\n} from 'react-native-paper';\nimport CheckboxInput from '../components/checkBox';\nimport type { paperSelect } from '../interface/paperSelect.interface';\n\nconst PaperSelect = ({\n  label,\n  arrayList,\n  selectedArrayList,\n  multiEnable,\n  errorText,\n  value,\n  onSelection,\n  dialogStyle,\n  dialogTitleStyle,\n  searchStyle,\n  checkboxColor,\n  checkboxLabelStyle,\n  checkboxUncheckedColor,\n  errorStyle,\n  textInputMode,\n  underlineColor,\n  activeUnderlineColor,\n  activeOutlineColor,\n  outlineColor,\n  textInputBackgroundColor,\n  textInputColor,\n  textInputHeight,\n  dialogButtonLabelStyle,\n}: paperSelect) => {\n  const [selectText, setSelectText] = useState(value);\n  const [searchKey, setSearchKey] = useState('');\n  const [arrayHolder, setArrayHolder] = useState([...arrayList]);\n\n  const [list, setList] = useState([...arrayList]);\n\n  const [selectedList, setSelectedList] = useState([...selectedArrayList]);\n\n  const selectInputRef = useRef<any>(null);\n  const [visible, setVisible] = useState(false);\n\n  const showDialog = () => setVisible(true);\n\n  const _hideDialog = () => {\n    var data = [...list];\n    var selectedData = [...selectedList];\n    let selected: Array<any> = [];\n    selectedData.forEach((val) => {\n      data.forEach((el) => {\n        if (val._id === el._id) {\n          selected.push(el.value);\n        }\n      });\n    });\n    value = selected.join();\n    setSelectText(selected.join());\n    onSelection({\n      text: selected.join(),\n      selectedList: selectedData,\n    });\n    setVisible(false);\n    if (selectInputRef && selectInputRef.current) {\n      selectInputRef.current.blur();\n    }\n  };\n\n  const _onFocus = () => {\n    setArrayHolder(arrayList);\n    setList(arrayList);\n    showDialog();\n  };\n\n  const _onChecked = (item: any) => {\n    const selectedData = [...selectedList];\n    // const index = data.findIndex(x => x._id === item._id);\n    const indexSelected = selectedData.indexOf(item);\n    if (indexSelected > -1) {\n      selectedData.splice(indexSelected, 1);\n    } else {\n      selectedData.push(item);\n    }\n    setSelectedList(selectedData);\n  };\n\n  const _onCheckedSingle = (item: any) => {\n    var selectedData = [...selectedList];\n    // const index = data.findIndex(x => x._id === item._id);\n    const indexSelected = selectedData.indexOf(item);\n    if (indexSelected > -1) {\n      // selectedData.splice(indexSelected, 1);\n      selectedData = [];\n    } else {\n      selectedData = [];\n      selectedData.push(item);\n    }\n    setSelectedList(selectedData);\n  };\n\n  const _exists = (item: any) => {\n    return selectedList.indexOf(item) > -1 ? true : false;\n  };\n\n  const _isCheckedAll = () => {\n    const data = [...list];\n    const selectedData = [...selectedList];\n    return selectedData.length !== 0 && selectedData.length === data.length;\n  };\n\n  const _checkAll = () => {\n    const data = [...list];\n    var selectedData = [...selectedList];\n    if (selectedData.length === data.length) {\n      selectedData = [];\n    } else if (selectedData.length === 0 || selectedData.length > 0) {\n      selectedData = data.slice(0);\n    }\n\n    setSelectedList(selectedData);\n  };\n\n  const _renderListForMulti = () => {\n    return list.map((item, key) => {\n      return (\n        <TouchableOpacity\n          style={{ flexDirection: 'row', alignItems: 'center' }}\n          key={key}\n          onPress={() => {\n            _onChecked(item);\n          }}\n        >\n          <CheckboxInput\n            isChecked={_exists(item)}\n            label={item.value}\n            checkboxLabelStyle={checkboxLabelStyle}\n            checkboxColor={checkboxColor}\n            checkboxUncheckedColor={checkboxUncheckedColor}\n          />\n        </TouchableOpacity>\n      );\n    });\n  };\n\n  const _renderListForSingle = () => {\n    return list.map((item, key) => {\n      return (\n        <TouchableOpacity\n          style={{ flexDirection: 'row', alignItems: 'center' }}\n          key={key}\n          onPress={() => {\n            _onCheckedSingle(item);\n          }}\n        >\n          <CheckboxInput\n            isChecked={_exists(item)}\n            label={item.value}\n            checkboxLabelStyle={checkboxLabelStyle}\n            checkboxColor={checkboxColor}\n            checkboxUncheckedColor={checkboxUncheckedColor}\n          />\n        </TouchableOpacity>\n      );\n    });\n  };\n\n  const _filterFunction = (text: string) => {\n    setSearchKey(text);\n    const newData = arrayHolder.filter((item) =>\n      item.value.toLowerCase().includes(text.toLowerCase())\n    );\n    setList(newData);\n  };\n\n  return (\n    <>\n      <View style={styles.container}>\n        <TextInput\n          ref={selectInputRef}\n          style={{\n            backgroundColor: textInputBackgroundColor || '#fff',\n            color: textInputColor || '#000',\n            height: textInputHeight,\n          }}\n          label={label}\n          underlineColor={underlineColor || 'black'}\n          activeUnderlineColor={activeUnderlineColor || 'black'}\n          activeOutlineColor={activeOutlineColor || 'black'}\n          outlineColor={outlineColor || 'black'}\n          mode={textInputMode || 'outlined'}\n          onFocus={_onFocus}\n          showSoftInputOnFocus={false}\n          value={selectText}\n          right={\n            <TextInput.Icon\n              style={{\n                justifyContent: 'center',\n                alignItems: 'center',\n                alignSelf: 'center',\n                alignContent: 'center',\n                position: 'absolute',\n                top: 0,\n                bottom: 0,\n                left: 0,\n                right: 0,\n              }}\n              size={15}\n              name=\"chevron-down\"\n            />\n          }\n        />\n        {errorText ? (\n          <Text style={{ ...errorStyle, color: errorStyle?.color || 'red' }}>\n            {errorText}\n          </Text>\n        ) : null}\n      </View>\n\n      <View>\n        <Portal>\n          <Dialog\n            style={{\n              backgroundColor: dialogStyle?.backgroundColor || 'white',\n              borderRadius: dialogStyle?.borderRadius || 5,\n            }}\n            visible={visible}\n            dismissable={false}\n          >\n            <Dialog.Title style={dialogTitleStyle}>{label}</Dialog.Title>\n            <Dialog.Content>\n              <Dialog.ScrollArea\n                style={{\n                  height: 300,\n                  paddingVertical: 10,\n                  paddingHorizontal: 0,\n                }}\n              >\n                <Searchbar\n                  value={searchKey}\n                  placeholder=\"Search\"\n                  onChangeText={(text: string) => _filterFunction(text)}\n                  iconColor={searchStyle?.iconColor || 'black'}\n                  style={{\n                    borderRadius: searchStyle?.borderRadius || 5,\n                    borderColor: searchStyle?.borderColor || '#e5e5e5',\n                    backgroundColor: searchStyle?.backgroundColor || '#e5e5e5',\n                    borderWidth: 0.5,\n                    marginBottom: 10,\n                    marginHorizontal: 8,\n                    color: searchStyle?.textColor || '#000',\n                  }}\n                />\n                {multiEnable === true && (\n                  <TouchableOpacity\n                    style={{ flexDirection: 'row', alignItems: 'center' }}\n                    onPress={() => {\n                      _checkAll();\n                    }}\n                  >\n                    <CheckboxInput\n                      isChecked={_isCheckedAll()}\n                      label=\"Select All\"\n                      checkboxLabelStyle={checkboxLabelStyle}\n                      checkboxColor={checkboxColor}\n                      checkboxUncheckedColor={checkboxUncheckedColor}\n                    />\n                  </TouchableOpacity>\n                )}\n                <ScrollView\n                  style={{ width: '100%' }}\n                  persistentScrollbar={true}\n                  showsVerticalScrollIndicator={true}\n                >\n                  {multiEnable === true\n                    ? _renderListForMulti()\n                    : _renderListForSingle()}\n                </ScrollView>\n              </Dialog.ScrollArea>\n            </Dialog.Content>\n            <Dialog.Actions style={{ marginTop: -20 }}>\n              <Button labelStyle={dialogButtonLabelStyle} onPress={_hideDialog}>\n                Done\n              </Button>\n            </Dialog.Actions>\n          </Dialog>\n        </Portal>\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    marginBottom: 10,\n  },\n});\n\nexport default memo(PaperSelect);\n"]}